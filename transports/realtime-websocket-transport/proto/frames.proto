//
// Copyright (c) 2024â€“2025, Daily
//
// SPDX-License-Identifier: BSD 2-Clause License
//

// Generate frames_pb2.py with:
//
//   python -m grpc_tools.protoc --proto_path=./ --python_out=./protobufs frames.proto

syntax = "proto3";

package pipecat;

// Represents a basic unit of text data.
message TextFrame {
  uint64 id = 1;
  string name = 2;
  string text = 3;
}

// Represents a raw chunk of audio data,
// either generated by Pipecat for playback
// or to be sent to Pipecat for processing.
message AudioRawFrame {
  uint64 id = 1;
  string name = 2;
  bytes audio = 3;
  uint32 sample_rate = 4;
  uint32 num_channels = 5;
  optional uint64 pts = 6;
}

// Represents a transcribed text frame with speaker metadata.
// Typically created when a participant speaks.
message TranscriptionFrame {
  uint64 id = 1;
  string name = 2;
  string text = 3;
  string user_id = 4;
  string timestamp = 5;
}

// Wrapper for a generic message sent to or received from the transport layer.
// Commonly used for RTVI protocol messages.
message MessageFrame {
    string data = 1;
}

message Frame {
  oneof frame {
    TextFrame text = 1;
    AudioRawFrame audio = 2;
    TranscriptionFrame transcription = 3;
    MessageFrame message = 4;
  }
}
